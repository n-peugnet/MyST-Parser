name: continuous-integration

on:
  push:
    branches: [master]
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+*"
  pull_request:

jobs:
  pre-commit:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: "3.8"
    - uses: pre-commit/action@v2.0.0

  tests:

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.7", "3.9", "3.10"]
        sphinx: [">=5,<6"]
        os: [ubuntu-latest]
        include:
        - os: ubuntu-latest
          python-version: "3.8"
          sphinx: ">=4,<5"
        - os: windows-latest
          python-version: "3.8"
          sphinx: ">=4,<5"

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[linkify,testing]
        pip install --upgrade-strategy "only-if-needed" "sphinx${{ matrix.sphinx }}"
    - name: Run pytest
      run: |
        pytest --cov=myst_parser --cov-report=xml --cov-report=term-missing
        coverage xml
    - name: Upload to Codecov
      if: github.repository == 'executablebooks/MyST-Parser' && matrix.python-version == 3.8
      uses: codecov/codecov-action@v1
      with:
        name: myst-parser-pytests
        flags: pytests
        file: ./coverage.xml
        fail_ci_if_error: true

  check-myst-docutils:

    name: Check myst-docutils install
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        docutils-version: ["0.17", "0.18", "0.19"]

    steps:
    - name: Checkout source
      uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: "3.8"
    - name: Install setup
      run: |
        python -m pip install --upgrade pip
        pip install tomlkit
    - name: Modify setup
      run: python .github/workflows/docutils_setup.py pyproject.toml README.md
    - name: Install dependencies
      run: |
        pip install .
        pip install pytest~=6.2 pytest-param-files~=0.3.3 pygments docutils==${{ matrix.docutils-version }}
    - name: ensure sphinx is not installed
      run: |
        python -c "\
        try:
            import sphinx
        except ImportError:
            pass
        else:
            raise AssertionError()"
    - name: Run pytest for docutils-only tests
      run: pytest tests/test_docutils.py tests/test_renderers/test_fixtures_docutils.py tests/test_renderers/test_include_directive.py
    - name: Run docutils CLI
      run: echo "test" | myst-docutils-html

  doc-builds:

    name: Documentation builds
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        format: ["man", "text"]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[linkify,rtd]
    - name: Build docs
      run: |
        sphinx-build -nW --keep-going -b ${{ matrix.format }} docs/ docs/_build/${{ matrix.format }}

  doc-build-pdf:

    name: Documentation PDF build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[linkify,rtd]
    - name: Build docs
      run: |
        sphinx-build -nW --keep-going -b latex docs/ docs/_build/latex

    - name: Run PDF build
      uses: xu-cheng/latex-action@v2
      with:
        working_directory: docs/_build/latex
        root_file: "mystparser.tex"
        # https://github.com/marketplace/actions/github-action-for-latex#it-fails-due-to-xindy-cannot-be-found
        pre_compile: |
          ln -sf /opt/texlive/texdir/texmf-dist/scripts/xindy/xindy.pl /opt/texlive/texdir/bin/x86_64-linuxmusl/xindy
          ln -sf /opt/texlive/texdir/texmf-dist/scripts/xindy/texindy.pl /opt/texlive/texdir/bin/x86_64-linuxmusl/texindy
          wget https://sourceforge.net/projects/xindy/files/xindy-source-components/2.4/xindy-kernel-3.0.tar.gz
          tar xf xindy-kernel-3.0.tar.gz
          cd xindy-kernel-3.0/src
          apk add make
          apk add clisp --repository=http://dl-cdn.alpinelinux.org/alpine/edge/community
          make
          cp -f xindy.mem /opt/texlive/texdir/bin/x86_64-linuxmusl/
          cd ../../
      env:
        XINDYOPTS: -L english -C utf8  -M sphinx.xdy

  publish:

    name: Publish myst-parser to PyPi
    needs: [pre-commit, tests, check-myst-docutils, doc-builds]
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
    runs-on: ubuntu-latest
    steps:
    - name: Checkout source
      uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: "3.8"
    - name: install flit
      run: |
        pip install flit~=3.4
    - name: Build and publish
      run: |
        flit publish
      env:
        FLIT_USERNAME: __token__
        FLIT_PASSWORD: ${{ secrets.PYPI_KEY }}

  publish-docutils:

    name: Publish myst-docutils to PyPi
    needs: [publish]
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
    runs-on: ubuntu-latest
    steps:
    - name: Checkout source
      uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: "3.8"
    - name: install flit and tomlkit
      run: |
        pip install flit~=3.4 tomlkit
    - name: Modify setup
      run: python .github/workflows/docutils_setup.py pyproject.toml README.md
    - name: Build and publish
      run: |
        flit publish
      env:
        FLIT_USERNAME: __token__
        FLIT_PASSWORD: ${{ secrets.PYPI_KEY_DOCUTILS }}
